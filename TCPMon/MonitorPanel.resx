<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolTip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>114, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAACk
        CQAAAk1TRnQBSQFMAgEBBwEAAQgBAAEIAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABIAMAAQEBAAEgBgABIK4AA6UB//wAAnIBZwH/AnUBWgH/+AAChAGBAf8B4gHOAboB/wNjAf9wAAMf
        Af8IAAMfAf8gAAMfAf8DHwH/Ax8B/wMfAf8QAAMfAf8DHwH/Ax8B/wMfAf8gAAPfAf8CcgFnAf8B+QH2
        AfEB/wHiAc0BuQH/AoABWQH/AoQBfwH/AokBhgH/A7sB/2AAAx8B/wgAAx8B/yAAAx8B/wMfAf8DHwH/
        Ax8B/xAAAx8B/wMfAf8DHwH/Ax8B/xAAA8UB/wgAA8EB/wHPAa4BjgH/AesB3gHRAf8B/QH8AfoB/wH9
        AfwB+gH/Af0B+wH4Af8B9AHrAeMB/wHxAecB3QH/AdgBvgGjAf8CawFhAf9cAAMfAf8IAAMfAf8gAAMf
        Af8DHwH/Ax8B/wMfAf8QAAMfAf8DHwH/Ax8B/wMfAf8QAAOiAf8DnwH/BAADdgH/AfgB8QHsAf8B/QH7
        AfgB/wH4AfAB5wH/AfcB7wHmAf8B9wHuAeQB/wH4AfAB6AH/AfgB8QHqAf8B/QH7AfkB/wHyAekB4AH/
        AoUBgQH/UAADHwH/Ax8B/wMfAf8DHwH/Ax8B/wMfAf8DHwH/Ax8B/xgAAx8B/wMfAf8DHwH/Ax8B/xAA
        Ax8B/wMfAf8DHwH/Ax8B/xAAA7AB/wOcAf8DngH/AmsBaQH/AfoB9wHyAf8B+gHzAewB/wH4AfEB6QH/
        AfgB8AHnAf8B9wHvAeYB/wH3Ae4B5AH/AfYB7AHiAf8B9wHvAecB/wH0AewB5QH/A3wB/1gAAx8B/wgA
        Ax8B/1wAA+sB/wOoAf8DnAH/A5wB/wJjAVwB/wH6AfYB8QH/AfoB9AHuAf8B+QHyAeoB/wH4AfEB6QH/
        AfgB8AHoAf8B9wHvAeYB/wH3Ae4B5AH/AfgB8QHpAf8B8wHqAeIB/wKGAYMB/1gAAx8B/wgAAx8B/1gA
        A9YB/wOcAf8DnAH/A5wB/wOcAf8CYwFhAf8B+gH2AfIB/wH6AfUB7wH/AfoB9AHuAf8B+gHzAe0B/wH5
        AfMB6wH/AfkB8gHrAf8B+AHxAekB/wH6AfUB7wH/AfMB6gHiAf8ChgGDAf9QAAMfAf8DHwH/Ax8B/wMf
        Af8DHwH/Ax8B/wMfAf8DHwH/GAADHwH/Ax8B/wMfAf8DHwH/Ax8B/wMfAf8DHwH/Ax8B/wMfAf8DHwH/
        Ax8B/wMfAf8IAAOnAf8DnAH/A5wB/wOcAf8DnAH/A2wB/wHkAdEBvgH/AfoB9gHyAf8B+gH2AfEB/wH6
        AfYB8QH/AfoB9QHxAf8B+gH1AfEB/wH6AfUB8AH/AfYB8AHpAf8B3AHEAa0B/wOnAf9YAAMfAf8IAAMf
        Af8gAAMfAf8DHwH/Ax8B/wMfAf8DHwH/Ax8B/wMfAf8DHwH/Ax8B/wMfAf8DHwH/Ax8B/wgAA6IB/wOc
        Af8DnAH/A5wB/wOcAf8DjwH/A3IB/wJjAWIB/wNjAf8CYwFiAf8CcAFeAf8CcgFoAf8CcgFoAf8CfAF1
        Af8DwQH/XAADHwH/CAADHwH/IAADHwH/Ax8B/wMfAf8DHwH/Ax8B/wMfAf8DHwH/Ax8B/wMfAf8DHwH/
        Ax8B/wMfAf8IAAOiAf8DnAH/A5wB/wOcAf8DnAH/A5wB/wOcAf8DnAH/A5wB/wOcAf8DrgH/bAADHwH/
        CAADHwH/WAADogH/A5wB/wOcAf8DnAH/A5wB/wOcAf8DnAH/A5wB/wOcAf8DnAH/A64B/9QAA7sB/wOc
        Af8DnAH/A5wB/wOcAf8DnAH/A5wB/wOcAf8DnAH/A5wB/wPGAf/YAAO8Af8DpAH/A6QB/wOkAf8DpAH/
        A6QB/wOkAf8DqAH/A9cB//8A/wD/AP8A7AADHwH/Ax8B/wMfAf8IAAMfAf8DHwH/Ax8B/2AAAx8B/wMf
        Af8DHwH/CAADHwH/Ax8B/wMfAf8DHwH/Ax8B/wwAAx8B/wMfAf8DHwH/Ax8B/wQAAx8B/wMfAf8DHwH/
        Ax8B/wwAAx8B/wMfAf8DHwH/EAADHwH/GAADHwH/LAADHwH/Ax8B/wMfAf8DHwH/IAADHwH/DAADHwH/
        DAADHwH/EAADHwH/DAADHwH/BAADHwH/DAADHwH/BAADHwH/HAADHwH/GAADHwH/KAADHwH/DAADHwH/
        IAADHwH/Ax8B/wgAAx8B/wwAAx8B/xAAAx8B/wwAAx8B/wQAAx8B/wwAAx8B/wQAAx8B/xwAAx8B/xgA
        Ax8B/ygAAx8B/wwAAx8B/yAAAx8B/wQAAx8B/wQAAx8B/wwAAx8B/xQAAx8B/wMfAf8DHwH/Ax8B/wQA
        Ax8B/wwAAx8B/wQAAx8B/xwAAx8B/xgAAx8B/ywAAx8B/wMfAf8DHwH/Ax8B/yAAAx8B/wgAAx8B/wMf
        Af8MAAMfAf8gAAMfAf8EAAMfAf8MAAMfAf8EAAMfAf8cAAMfAf8YAAMfAf84AAMfAf8gAAMfAf8MAAMf
        Af8EAAMfAf8EAAMfAf8UAAMfAf8DHwH/Ax8B/wgAAx8B/wMfAf8DHwH/Ax8B/wwAAx8B/wMfAf8DHwH/
        EAADHwH/GAADHwH/HAADHwH/DAADHwH/Ax8B/wMfAf8MAAMfAf8YAAMfAf8DHwH/Ax8B/wwAAx8B/wMf
        Af8oAAMfAf80AAMfAf8YAAMfAf8cAAMfAf8kAAMfAf9gAAMfAf80AAMfAf8YAAMfAf8cAAMfAf8kAAMf
        Af+YAAMfAf8DHwH/Ax8B/wgAAx8B/wMfAf8DHwH//wD/AP8AUwABQgFNAT4HAAE+AwABKAMAAUADAAEg
        AwABAQEAAQEGAAEBFgAD/wEABP8B/gH/AgAE/wH+AX8CAAT/Af4BPwIAAf0BvwLDAfwBAwIAAf0BvwLD
        AdgBAQIAAf0BvwLDAcgDAAHwAQ8CwwHAAwAB/QG/Av8BgAMAAf0BvwL/BAAB8AEPAcABAwQAAf0BvwHA
        AQMBAAEBAgAB/QG/AcABAwEAAR8CAAH9Ab8C/wEAAR8CAAT/AQABHwIABP8BgAE/AgAG/wIAHP8B8QGP
        Av8B8QGDAYQBOAH3Ae8B/gEfAe4B7wF1AdcB9wHvAf0B3wHmAe8BdQHXAfcB7wH9Ad8B6gHvAYUB1wH3
        Ae8B/gEfAewB7wH1AdcB9wHvAf8B3wHuAa8BjAE4AfcB7wHuATsB8QHPAf0B/wH3Au8B+wL/Af0B/wH3
        Au8B+wT/AfEBjxr/Cw==
</value>
  </data>
</root>